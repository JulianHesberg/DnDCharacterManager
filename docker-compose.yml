version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" # AMQP client port
      - "15672:15672" # HTTP management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-item:
    image: mongo
    container_name: item-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-item-data:/data/db
        
  mongo-character:
    image: mongo
    container_name: character-mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-character-data:/data/db
        
  mongo-skill:
    image: mongo
    container_name: skill-mongo
    ports:
      - "27019:27017"
    volumes:
      - mongo-skill-data:/data/db

  items-api:
    build:
      context: ./apps/ItemMicroservice
      dockerfile: Dockerfile
    container_name: items-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo-item:
        condition: service_healthy
        
  character-api:
    build:
      context: ./apps/CharacterMicroservice
      dockerfile: Dockerfile
    container_name: character-api
    ports:
      - "5001:8080"
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo-character:
        condition: service_healthy
        
  skill-api:
    build:
      context: ./apps/SkillMicroservice
      dockerfile: Dockerfile
    container_name: skill-api
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo-skill:
        condition: service_healthy
      

volumes:
  mongo-item-data:
  mongo-character-data:
  mongo-skill-data:
